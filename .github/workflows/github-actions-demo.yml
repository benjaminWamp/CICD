name: 🚀 Build workflow
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🚀 Lancement des étapes de construction"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "🚀 Le code du dépôt a été cloné sur le serveur d'exécution."
      - run: npm clean-install
      - run: npm run build
      - name: Save cache (node_modules)
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - run : echo "🏁 Étapes de construction terminées"

  test:
    runs-on: ubuntu-latest
    needs:
        - build
    strategy:
      matrix:
        browsers: [chrome, firefox, edge, opera]
    steps:
      - uses: actions/checkout@v4
      - run: echo "🚀 Lancement des étapes de test"
      - name: Restore cache (node_modules)
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - run: echo "🚀 Le code du dépôt a été cloné sur le serveur d'exécution."
      - uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          browser: ${{ matrix.browsers }}
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          path: cypress/videos/
          browsers: ${{ matrix.browsers }}
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          path: cypress/screenshot/
          browsers: ${{ matrix.browsers }}
      - run: echo "🚀 Étapes de test terminées"
      - run : echo "🚀 Étapes de test terminées"
  deploie: 
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps: 
      - uses: appleboy/ssh-action@v1
        with :
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{scretds.SSH_KEY}}
          scripts: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh"] && \. "$NVM_DIr/nvm.sh"
            cd CICD
            git pull
            npm install
            npm run build
            pm2 restart npm
